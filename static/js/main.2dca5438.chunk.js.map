{"version":3,"sources":["images/hema.png","components/AboutMe.js","images/PynetworkArch.png","components/AboutPynetwork.js","components/Inventory.js","images/SHowCLI.png","images/ConfigCli.png","components/WebCli.js","images/CreateBackup.png","images/DeleteBackup.png","images/ExportBackup.png","components/ConfigManagement.js","components/Projects.js","components/Resume.js","components/AboutPynetworkProjects.js","images/PynetworkURL.png","components/QuickSetup.js","components/Dashboard.js","index.js"],"names":["AboutMe","myphoto","display","width","headingName","fontFamily","join","bodynext1","Grid","container","item","xs","sm","md","lg","src","style","this","Typography","variant","Divider","href","target","React","Component","AboutPynetwork","ArchPhoto","heading1","heading2","earlyDev","margin","iframecontainerYoutube","position","height","iframeYoutube","top","left","archImage","title","frameborder","allow","allowfullscreen","Inventory","WebCli","SHowCLI","ConfigCli","ConfigManagement","CreateBackup","DeleteBackup","ExportBackup","Projects","noWrap","PynetworkURL","preCode","drawerWidth","useStyles","makeStyles","theme","root","ButtonText","toolbarButtons","marginLeft","ButtonGroupStyle","marginRight","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","useState","open","setOpen","selectedIndex","setSelectedIndex","displayPage","setDisplayPage","handleClick","event","index","console","log","QuickSetup","selectedPage","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","color","onClick","edge","ButtonGroup","Button","align","Drawer","anchor","paper","direction","List","map","text","ListItem","multiline","ListItemText","primary","button","selected","secondary","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2dca5438.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hema.a0085c91.png\";","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport myphoto from \"../images/hema.png\";\n\n\nclass AboutMe extends React.Component {\n  myphoto = {\n    display: \"block\",\n    \"margin-top\": \"5%\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"40%\",\n  };\n  headingName = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-align\": \"center\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <img src={myphoto} style={this.myphoto} />\n            <br />\n            <Typography style={this.headingName}>\n              Hemaramanan Sivanesan\n            </Typography>\n            <Typography variant=\"subtitle1\" style={this.bodynext1}>\n              <Divider />\n              <br />\n              Hi There!\n              <br />\n              <br />\n              I am Hema, I've been a Network Engineer and Instructor for over 6+\n              years, and I have worked with DC, ISP and Corporate networks.\n              Further, I have a strong passion for network automation and\n              developing tools for simplifying network maintenance and\n              troubleshooting.\n              <br />\n              <br />I have developed a web-based tool called \"<b>Pynetwork</b>\",\n              concentrated on network maintenance and troubleshooting. Further,\n              I am working on adding more features to pynetwork.\n              <br /> <br />\n              Connect me on{\" \"}\n              <b>\n                <a href=\"https://www.linkedin.com/in/hema/\" target=\"_blank\">\n                  LinkedIn\n                </a>{\" \"}\n              </b>\n               , I'm <b>#OpenToWork </b> for\n              exciting opportunities.\n              <br />\n              <br />\n              This website only reflects my thoughts and interests, does not reflect or represent my current or previous workplaces directly or indirectly.\n              <br />\n              <br />\n              Stay, Tuned! <br />\n              <br />\n              Regs, <br />\n              Hema\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AboutMe;\n","export default __webpack_public_path__ + \"static/media/PynetworkArch.75d76bcd.png\";","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport archImage from \"../images/PynetworkArch.png\";\n\nclass AboutPynetwork extends React.Component {\n  ArchPhoto = {\n    display: \"block\",\n    \"margin-top\": \"5%\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  earlyDev = {\n    margin: \"22px 25% 22px\",\n  };\n  iframecontainerYoutube = {\n    position: \"relative\",\n    width: \"100%\",\n    \"padding-bottom\": \"56.25%\",\n    height: \"0\",\n  };\n  iframeYoutube = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>\n              Introduction to Pynetwork\n            </Typography>\n            <Typography style={this.bodynext1}>\n              <Divider />\n              <br />\n              Pynetwork is an <b>#OpenSourced</b> network automation tool with Web Interface for simplifying network maintenance and troubleshooting. Currently, \n              it supports CLI based automation (for Cisco devices), in future, I am planning to add more features with NETCONF and RESTCONF capability.\n              <br />\n              <br />\n\n              Check out the <b>Quick Setup</b> section to set up the pynetwork in your local environment.\n\n              <br />\n              <br />\n            </Typography>\n            <Typography style={this.heading2}>\n              Pynetwork Architecture\n            </Typography>\n            <Divider />\n            <img src={archImage} style={this.ArchPhoto} />\n\n            <Typography style={this.bodynext1}>\n              <br />\n              This is the simple architecture of pynetwork, let's look at each\n              part in a little bit of detail. Further, watch my introduction\n              session about pynetwork at <b> Cisco DevNet Create 2021.</b>\n              <br />\n              <br />\n              <div style={this.iframecontainerYoutube}>\n                <iframe\n                  style={this.iframeYoutube}\n                  width=\"560\"\n                  height=\"315\"\n                  src=\"https://www.youtube.com/embed/cN_tu2juedQ\"\n                  title=\"YouTube video player\"\n                  frameborder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowfullscreen\n                ></iframe>\n              </div>\n              <br />\n              <br />\n              <b>Frontend</b>\n              <Divider />\n              <br />\n              The frontend is the user interacting WEB GUI interface and it is\n              doing two main jobs.\n              <ul>\n                <li>\n                  {\"  \"}\n                  Collect the data from the user and send it back to the backend\n                  for processing that data.{\" \"}\n                </li>\n                <li>\n                  {\" \"}\n                  Get the response (Processed data) from the backend and display\n                  it on the WEB GUI.\n                </li>\n              </ul>\n              I used React and material-UI for developing the frontend. React is\n              a framework for developing the frontend ( developed by Facebook).\n              further, Material-UI is prebuilt react components, so we can\n              directly import and use it with React.\n              <br /> <br />\n              For Example:-\n              <dl>\n                <dt> What needs to appear? </dt>\n                <dd> Typography- is the components for handling text </dd>\n                <dt> How does it need to appear? </dt>\n                <dd> Variant:'h1' - Type/size of the text is Heading1 </dd>\n              </dl>\n              <br />\n              <b>Backend</b>\n              <Divider />\n              <br />\n              I used Flask for the backend, which is getting the request from\n              the user via the frontend and process that responds then send back\n              that processed data to the frontend. The frontend will display the\n              data to the user according to the frontend design.\n              <br />\n              <br />\n              <b>Netmiko </b>\n              <br />\n              It’s a python library for interacting with network devices. For\n              example, if I need to get the output of the \"show version | in\n              uptime\" command on a device, So I can use the function called\n              \"send_commands\" to interact with the device with show commands.\n              likewise, it contains a separate function for configuring the\n              devices.\n              <br />\n              <br />\n              <b>Sqlalchemy and Sqlite3 </b>\n              <br />\n              It's an ORM (Object-relational mapper) library and it can interact\n              with the Database without any SQL queries and the Sqlite3 is the\n              database we are using. For example, if I need to get one-row data,\n              I need to use the \"filter_by\" function with some arguments instead\n              of SQL Query like \"SELECT * FROM &lt;TableName&gt; WHERE\n              &lt;Condition&gt;\". It was very easy to interact with the database\n              with SQLALhemy and I am sharing this from my experience.\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AboutPynetwork;\n","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\n\nclass Inventory extends React.Component {\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  iframecontainerYoutube = {\n    position: \"relative\",\n    width: \"100%\",\n    \"padding-bottom\": \"56.25%\",\n    height: \"0\",\n  };\n  iframeYoutube = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>Inventory Management</Typography>\n            <Divider />\n            <Typography style={this.bodynext1}>\n              <br />\n              Inventory is managing the IP address and credentials of the\n              network devices, That information will be used by pynetwork to\n              interact with the device and perform operational tasks such as\n              sending show commands or config commands.\n              <br />\n              <br />\n              In this section, we need to look at the two API flows that listed\n              below.\n              <ul>\n                <li>\n                  {\" \"}\n                  GET all the device records from the pynetwork database.\n                </li>\n                <li>\n                  {\" \"}\n                  Managing the credentials database with pynetwork by DELETE /\n                  UPDATE / CREATE operations.\n                </li>\n              </ul>\n              Mentioned APIs are working on the backend, and the frontend is\n              utilizing it according to the user inputs.\n              <br />\n              <br />\n              Check the demo and get an understanding of the inventory feature\n              and the APIs flows.\n              <br />\n              <br />\n              <div style={this.iframecontainerYoutube}>\n                <iframe\n                  style={this.iframeYoutube}\n                  width=\"560\"\n                  height=\"315\"\n                  src=\"https://www.youtube.com/embed/CgQ_LJyrYlo\"\n                  title=\"YouTube video player\"\n                  frameborder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowfullscreen\n                ></iframe>\n              </div>\n              <br />\n              <br />\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","export default __webpack_public_path__ + \"static/media/SHowCLI.3e22eb43.png\";","export default __webpack_public_path__ + \"static/media/ConfigCli.11c021a1.png\";","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport SHowCLI from \"../images/SHowCLI.png\";\nimport ConfigCli from \"../images/ConfigCli.png\";\n\nclass WebCli extends React.Component {\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  iframecontainerYoutube = {\n    position: \"relative\",\n    width: \"100%\",\n    \"padding-bottom\": \"56.25%\",\n    height: \"0\",\n  };\n  iframeYoutube = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  };\n  SHowCLI = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  \n  ConfigCli = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>Web based CLI</Typography>\n            <Divider />\n            <Typography style={this.bodynext1}>\n              <br />\n              This section will cover the WEB CLI feature of pynetwork. Web CLI\n              allows you to perform the commands-execution on the network\n              devices that have already been added with the pynetwork database.\n              It is providing a web-based CLI console to manage your network.\n              Also, you can execute the same command on multiple devices at the\n              same time.\n              <br />\n              <br />\n              There are two types of WEB CLI is available in pynetwork, those\n              are \"Show CLI\" and another \"Config CLI\".\n              <ul>\n                <li> Show CLI - Execute show commands on multiple nodes.</li>\n                <li>\n                  {\" \"}\n                  Config CLI - Execute config commands on multiple nodes.\n                </li>\n              </ul>\n              <b> Show CLI </b>\n              <br/>\n        \n              This feature allows running multiple show commands on one or more nodes on the pynetwork. In this example, \n              we could able to execute two commands (<b>\"show version | in uptime\"</b> & <b>\"show ip interface brief | in up\"</b> ) parallelly on two switches (<b>\"192.168.200.101\" </b> & <b>\"192.168.200.102\"</b>).\n              <br/><br/>\n              <img src={SHowCLI} style={this.SHowCLI} />\n              <br/><br/>\n              <b> Config CLI </b>\n              <br/>\n        \n              This feature allows to execute configurations on one or more nodes on the pynetwork. In this example, \n              we could able to apply set of configurations (<b>\"ip name-server 10.25.10.5\"</b> & <b>\"ip name-server 10.25.10.6\"</b> ) parallelly on two switches (<b>\"192.168.200.101\" </b> & <b>\"192.168.200.102\"</b>).\n              <br/><br/>\n              <img src={ConfigCli} style={this.ConfigCli} />\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default WebCli;\n","export default __webpack_public_path__ + \"static/media/CreateBackup.9d7ff32f.png\";","export default __webpack_public_path__ + \"static/media/DeleteBackup.d3b65680.png\";","export default __webpack_public_path__ + \"static/media/ExportBackup.c5857fa9.png\";","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport CreateBackup from \"../images/CreateBackup.png\";\nimport DeleteBackup from \"../images/DeleteBackup.png\";\nimport ExportBackup from \"../images/ExportBackup.png\";\n\nclass ConfigManagement extends React.Component {\n  CreateBackup = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  DeleteBackup = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  ExportBackup = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  iframecontainerYoutube = {\n    position: \"relative\",\n    width: \"100%\",\n    \"padding-bottom\": \"56.25%\",\n    height: \"0\",\n  };\n  iframeYoutube = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  };\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>\n              Configuration and Backup Management\n            </Typography>\n            <Divider />\n            <Typography style={this.bodynext1}>\n              <br />\n              This feature is managing the backup of the running-config of devices. We can Backup multiple node running configurations at once. Also, \n              we can delete the unwanted backup from the database and keep the latest backup. \n              further, we can export a set of config files from pynetwork in ZIP format.\n              <br />\n              <br />\n              <b> Create Backup </b>\n              <br/>\n        \n              This feature allows to backup the running configuration of one or more nodes on the pynetwork. \n              In this example, we did backup the running configurations parallelly on two switches. (<b>\"192.168.200.101\" </b> & <b>\"192.168.200.102\"</b>).\n              <br/><br/>\n              <img src={CreateBackup} style={this.CreateBackup} />\n              <br/><br/>\n\n              <b> Delete Backup </b>\n              <br/>\n        \n              The config backup will be stored inside the pynetwork, This feature allows to delete the unwanted/outdated configs from pynetwork.\n\n              <br/><br/>\n              <img src={DeleteBackup} style={this.DeleteBackup} />\n              <br/><br/>\n              <b> Export Backup </b>\n              <br/>\n        \n              This feature allows to export a set of configuration backup files from pynetwork in ZIP format.\n\n              <br/><br/>\n              <img src={ExportBackup} style={this.ExportBackup} />\n              <br/><br/>\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ConfigManagement;\n","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport archImage from \"../images/PynetworkArch.png\";\n\nclass Projects extends React.Component {\n  ArchPhoto = {\n    display: \"block\",\n    \"margin-top\": \"5%\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  earlyDev = {\n    margin: \"22px 25% 22px\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>\n              Hemaramanan Sivanesan - NetDevOps Engineer\n            </Typography>\n            <Typography style={this.bodynext1}>\n              <Divider />\n              <br />\n              I am a Network Engineer, I love Networking, Designing and Solving\n              Complex Problems. Further, I build Software Tools to Simplify\n              Network Maintenance.\n              <br />\n              <br />\n            </Typography>\n            <Typography style={this.heading1} noWrap>\n              <i> Just added few projects, not up-to-date info. </i>\n              <Divider />\n            </Typography>\n            <br />\n            <Typography style={this.bodynext1}>\n              <ol>\n                <li>\n                  <b>Pynetwork - Web-Based Network Automation Tool.</b>\n                </li>\n                <br />\n                Pynetwork is an open-source project that I developed and,\n                Currently, It can run/push a list of show commands/configs on\n                multiple devices (Cisco) via SSH. Further, It can manage the\n                running configs backups of the device.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> React and Material-UI - Frontend.</li>\n                  <li> Flask - Backend.</li>\n                  <li> Sqlite3 - Database.</li>\n                  <li> Netmiko - To Interact with Network Devices..</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Network Audit Tool.</b>\n                </li>\n                <br />\n                I have developed network audit tools to analyse multiple\n                functionalities, such as Node / Link redundancy, L3VPN / L2VPN,\n                QoS, and specific config templates. To achieve this, I developed\n                various Python modules to identity each service and\n                functionality from running-config of each device in the network.\n                Finally, I generated one excel report by combining all modules\n                and those findings.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> Python</li>\n                  <li> Data Structures and Algorithms</li>\n                </ul>\n                <br />\n                <li>\n                  <b>MPLS Based Netflow with ELK Stack. </b>\n                </li>\n                <br />\n                This project was designed to collect the MPLS Label-based\n                NetFlow from the network and visualize/analyse it with the \"ELK\"\n                stack. I had to do some modifications on the Logstach backend to\n                identify the label-based Netflow. Also, extend the with Grafana.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> Docker</li>\n                  <li> Elasticsearch</li>\n                  <li> Logstash</li>\n                  <li> Kibana</li>\n                  <li> Grafana</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Cisco NSO Deployment</b>\n                </li>\n                <br />\n                I deployed Cisco NSO and create multiple service templates such\n                as L2VPN/L3VPN with YANG Model. Further, I Used REST APIs to\n                automate the NSO / Service Provisioning and used NETCONF for the\n                South-Bound interface.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> Python</li>\n                  <li> REST API</li>\n                  <li> NETCONF</li>\n                  <li> YANG</li>\n                </ul>\n                <br />\n                <li>\n                  <b>LNS Migration</b>\n                </li>\n                <br />\n                In this project, I had to convert the IOS-XE configurations to\n                IOS-XR configuration for migrating new LNS based on IOS-XR. I\n                wrote python codes to achieve this.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> Python</li>\n                  <li> YAML</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Datacenter Deployment</b>\n                </li>\n                <br />\n                I Involved in this project, from requirement collection to NRFU\n                tests. I was part of the HLD, LLD and deployment of the project.\n                Further, I prepared the entire NRFU document.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> VXLAN and EVPN</li>\n                  <li> ISIS, BGP</li>\n                  <li> Multicast, PIM, Anycast Gateway</li>\n                  <li> VPC, VLAN, TRUNK, MCLAG , STP</li>\n                  <li> Cisco Nexus Switches</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Esxi based Network Lab</b>\n                </li>\n                <br />\n                I did set up a Network Test-Lab environment with ESXI. It had\n                used to design and simulate the network before providing\n                solutions or deploying to the customer or production\n                environment. Further, I set up the free secured remote desktop\n                capacity for multiple users to access the Lab simultaneously.\n                <br />\n                <br />\n                Technologies/Products Involvement.\n                <ul>\n                  <li> VMware Esxi</li>\n                  <li> Ubuntu</li>\n                  <li> HP Blade / Rack server</li>\n                </ul>\n              </ol>\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport myphoto from \"../images/hema.png\";\n\nclass Resume extends React.Component {\n  myphoto = {\n    display: \"block\",\n    \"margin-top\": \"5%\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"40%\",\n  };\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.7rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.4rem\",\n    \"text-align\": \"justify\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.3rem\",\n  };\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <Typography style={this.heading1} noWrap>\n              Hemaramanan Sivanesan\n            </Typography>\n            <Divider />\n            <br />\n            <Typography style={this.heading2}>\n              I am a network engineer, I love Networking, Designing, Software\n              Development and solving complex problems. Further, I build\n              software tools to simplify network maintenance.\n            </Typography>\n            <br />\n            <Divider />\n            <br />\n            <br />\n            <Typography style={this.heading1} noWrap>\n              Education\n            </Typography>\n            <Typography style={this.bodynext1}>\n              <br />\n              Reading, <br />\n              <b>Master of Business Administration. </b>\n              <br />\n              <i>University of bedfordshire, (UK). </i> <br />\n              <br />\n              2016-2019 <br />\n              <b>Bachelor of Technology in Computer Network Technology. </b>\n              <br />\n              <i>University of Vocational Technology, (Sri Lanka). </i> <br />\n              Grade - Second Class upper (3.3/4).\n            </Typography>\n            <br />\n            <br />\n            <Divider />\n            <br />\n            <br />\n            <Typography style={this.heading1} noWrap>\n              Certifications\n            </Typography>\n            <Typography style={this.bodynext1}>\n              <ul>\n                <li>\n                  <b>Cisco Certified DevNet Specialist</b>\n                </li>\n                <i>Service Provider Automation and Programmability</i>\n                <br />\n                Issued : 2021 , January.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/d8af3297-994a-419e-a0bd-5abca6812140/linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Certification\n                </a>\n                <br />\n                <br />\n                <li>\n                  <b>Docker Essentials: A Developer Introduction</b>\n                </li>\n                Issued : 2021 , January.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/2e79ad49-4315-4f4b-a9db-ac50061c5d19?source=linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Course\n                </a>\n                <br />\n                <br />\n                <li>\n                  <b>Cisco Certified DevNet Associate</b>\n                </li>\n                Issued : 2020 , July.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/fcbbd212-c24e-4368-8fbc-21517a5734d6/linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Certification\n                </a>\n                <br />\n                <br />\n                <li>\n                  <b>Nutanix Certified Professional 5</b>\n                </li>\n                Issued : 2020 , May.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/223774af-ac39-4b00-82f7-424b92b77628/linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Certification\n                </a>\n                <br />\n                <br />\n                <li>\n                  <b>Cisco Certified Meraki Network Associate</b>\n                </li>\n                Issued : 2020, March.\n                <br />\n                <a\n                  href=\"https://community.meraki.com/t5/badges/userbadgespage/user-id/43522\"\n                  target=\"_blank\"\n                >\n                  Training\n                </a>\n                <br />\n                <br />\n                <li>\n                  {\" \"}\n                  <b>Cisco Certified Network Professsional</b>\n                </li>\n                <i>(CCNP Routing & Switching)</i>\n                <br />\n                Issued : 2018 , August.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/2e86a682-ad15-42bf-98d9-33f81b5d3f31/linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Certification\n                </a>\n                <br />\n                <br />\n                <li>\n                  <b>Cisco Certified Network Associate</b>\n                </li>\n                <i>(CCNP Routing & Switching)</i>\n                <br />\n                Issued : 2016 , February.\n                <br />\n                <a\n                  href=\"https://www.credly.com/badges/5e6f287a-8172-4f48-bedb-2757ec10c250/linked_in_profile\"\n                  target=\"_blank\"\n                >\n                  Certification\n                </a>\n                <br />\n                <br />\n              </ul>\n            </Typography>\n            <Divider />\n            <Typography style={this.heading1} noWrap>\n              <br />\n              Experience\n            </Typography>\n            <br />\n            <Typography style={this.bodynext1}>\n              <li>\n                <b>Technical Specialist - Network and Automation</b>\n              </li>\n              <i>HCL Technologies, From:- 2021 May - Present</i> <br />\n              <br />\n              Working as Network TAC engineer for a corporate network which is\n              distributed over 250 + locations over the glove with five\n              datacenters includes 4000+ switches and routers. Further, Writing\n              codes to network maintenance and troubleshooting.\n              <br />\n              <br />I am working with following Technologies / product.\n              <ul>\n                <li> Routing and Switching</li>\n                <li> F5 Load Balancer - LTM</li>\n                <li> SD-WAN - Meraki / Versa</li>\n                <li> Wirless Network</li>\n                <li> Palo Alto Firewall</li>\n                <li> Python and Ansible for network automation.</li>\n              </ul>\n              <li>\n                <b>Network and Automation Engineer</b>\n              </li>\n              <i>NCINGA PVT, From:- 2020, March. to 2021, May.</i>\n              <br /> <br />\n              Worked with multiple network technology and played various roles\n              such as TAC Engineer, Network Deployment Engineer and Software\n              developer.\n              <br />\n              <br />I had worked with the following Technologies/product.\n              <ul>\n                <li> Routing and Switching</li>\n                <li> VXLAN and EVPN</li>\n                <li> MPLS and Qos</li>\n                <li> L2VPN / L3VPN</li>\n                <li> Cisco EPNM (Data Center Network Manager).</li>\n                <li>\n                  {\" \"}\n                  Cisco DCNM (Cisco Evolved Programmable Network Manager).\n                </li>\n                <li> Cisco Wirless Network.</li>\n                <li> Docker and Microservices</li>\n                <li> Elasticsearch, kibana , logstash (ELK Stack)</li>\n                <li> Grafana</li>\n                <li> Python and Ansible for network automation</li>\n              </ul>\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Resume;\n","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport archImage from \"../images/PynetworkArch.png\";\n\nclass AboutPynetworkProjects extends React.Component {\n  ArchPhoto = {\n    display: \"block\",\n    \"margin-top\": \"5%\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  earlyDev = {\n    margin: \"22px 25% 22px\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>Hemaramanan Sivanesan</Typography>\n            <Typography style={this.bodynext1}>\n              <Divider />\n              <br />\n              I am a network engineer, I love Networking, Designing, Software\n              Development and solving complex problems. Further, I build\n              software tools to simplify network maintenance.\n              <br />\n              <br />\n            </Typography>\n            <Typography style={this.heading1} noWrap>\n              Projects\n              <Divider />\n            </Typography>\n            <br />\n            <Typography style={this.bodynext1}>\n              <ol>\n                <li>\n                  <b>Pynetwork - Web-Based Network Automation Tool.</b>\n                </li>\n                <br />\n                Pynetwor is an open-source project that I developed and, I am\n                working on it to add more features. Currently, It can run/push a\n                list of show commands/configs on multiple devices (Cisco) via\n                SSH. Further, It can manage the running configs backups of the\n                device.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> React and Material-UI - Frontend.</li>\n                  <li> Flask - Backend.</li>\n                  <li> Sqlite3 - Database.</li>\n                  <li> Netmiko - For interact with Network Devices.</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Network Audit Tool.</b>\n                </li>\n                <br />\n                I have developed network audit tools to analyse multiple\n                functionalities, such as Node / Link redundancy, L3VPN / L2VPN,\n                QoS, and specific config templates. To achieve this, I developed\n                various Python modules to identity each service and\n                functionality from running-config of each device in the network.\n                Finally, I generated one excel report by combining all modules\n                and that findings.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> Python</li>\n                  <li> Data Structures and Algorithms</li>\n                </ul>\n                <br />\n                <li>\n                  <b>MPLS Based Netflow with ELK Stack. </b>\n                </li>\n                <br />\n                This project is about collecting the MPLS Label-based NetFlow\n                from the network and visualize/analyse it with the \"ELK\" stack.\n                I had to do some modifications on the Logstach backend to\n                identify the label-based Netflow. Also, extend the with Grafana.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> Docker</li>\n                  <li> Elasticsearch</li>\n                  <li> Logstash</li>\n                  <li> Kibana</li>\n                  <li> Grafana</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Cisco NSO Deployment</b>\n                </li>\n                <br />\n                I deployed Cisco NSO and create multiple service templates such\n                as L2VPN/L3VPN with YANG Model. Further, I Used REST APIs to\n                automate the NSO / Service Provisioning and used NETCONF for the\n                South-Bound interface.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> Python</li>\n                  <li> REST API</li>\n                  <li> NETCONF</li>\n                  <li> YANG</li>\n                </ul>\n                <br />\n                <li>\n                  <b>LNS Migration</b>\n                </li>\n                <br />\n                In this project, I had to convert the IOS-XE configurations to\n                IOS-XR configuration for migrating new LNS that based on IOS-XR.\n                I wrote python codes to achieve this\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> Python</li>\n                  <li> YAML</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Datacenter Deployment</b>\n                </li>\n                <br />\n                I Involved in this project, from requirement collection to NRFU\n                tests. I was part of the HLD, LLD and deployment of the project.\n                Further, I prepared the entire NRFU document.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> VXLAN and EVPN</li>\n                  <li> ISIS, BGP</li>\n                  <li> Multicast, PIM, Anycast Gateway</li>\n                  <li> VPC, VLAN, TRUNK, MCLAG , STP</li>\n                  <li> Cisco Nexus Switches</li>\n                </ul>\n                <br />\n                <li>\n                  <b>Esxi and Shared Lab Deployment</b>\n                </li>\n                <br />\n                I Involved in this project, from requirement collection to NRFU\n                tests. I was part of the HLD, LLD and deployment of the project.\n                Further, I prepared the entire NRFU document.\n                <br />\n                <br />\n                Involved Technologies / products.\n                <ul>\n                  <li> VXLAN and EVPN</li>\n                  <li> ISIS, BGP</li>\n                  <li> Multicast, PIM, Anycast Gateway</li>\n                  <li> VPC, VLAN, TRUNK, MCLAG , STP</li>\n                  <li> Cisco Nexus Switches</li>\n                </ul>\n              </ol>\n            </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AboutPynetworkProjects;\n","export default __webpack_public_path__ + \"static/media/PynetworkURL.6ae68d78.png\";","import React from \"react\";\nimport { Typography, Grid, Divider } from \"@material-ui/core\";\nimport PynetworkURL from \"../images/PynetworkURL.png\";\n\nclass WebCli extends React.Component {\n  heading1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.6rem\",\n    \"text-bold\": \"true\",\n  };\n  PynetworkURL = {\n    display: \"block\",\n    \"margin-left\": \"auto\",\n    \"margin-right\": \"auto\",\n    width: \"100%\",\n  };\n  preCode = {\n    fontFamily: \"monospace\",\n    \"font-size\": \"1rem\",\n    \"background-color\": \"#dbd6d6\",\n  };\n  heading2 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.5rem\",\n  };\n  bodynext1 = {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n    \"text-align\": \"justify\",\n  };\n  iframecontainerYoutube = {\n    position: \"relative\",\n    width: \"100%\",\n    \"padding-bottom\": \"56.25%\",\n    height: \"0\",\n  };\n  iframeYoutube = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n          <Grid item xs={10} sm={8} md={6} lg={6}>\n            <br />\n            <br />\n            <Typography style={this.heading1}>Quick Setup Guide</Typography>\n            <Divider />\n            <Typography style={this.bodynext1}>\n              <br />\n              This tutorial will cover the steps that need to run the pynetwork on your docker environment. \n              I'm using Linux as a host machine to spine-up the containers.  \n              <br />\n              <br />\n              I have dockerized the pynetwork and hosted it on the Docker public registry (https://hub.docker.com/) as two images.  \n              So, We have to use those two images to run the pynetwork services.\n              <br />\n              <ul>\n                <li> hemaramanan/pynetwork_backend - It will cover the backend </li>\n                <li>hemaramanan/pynetwork_frontend -It will cover the frontend </li>\n              </ul>\n              I'm going to use the docker-compose to spine-up these images (containers) and provision the service. \n              It will be easy to manage the pynetwork as a service rather than individually handle relevant containers to up and run the pynetwork.\n             <br />\n              <br />\n              Follow the instruction below to run the pynetwork in your local environment.\n            \n              <br />\n              <br />\n              <b>Step: 1</b>\n              <br/>\n              Create the <b><i> docker-compose.yml </i> </b>file with the below-mentioned properties.\n<pre style={this.preCode}>{`\n  version: \"3.9\"\n  services:\n    pynetwork:\n      image: hemaramanan/pynetwork_backend\n      volumes:\n        - /app/pynetwork/data/\n      ports:\n        - \"5000:5000\"\n    pynetwork_ui:\n      image: hemaramanan/pynetwork_frontend\n      ports:\n        - \"8080:80\"\n      depends_on:\n        - pynetwork\n\n`}</pre>\n\n              <b>Step: 2</b>\n              <br/>\n              Navigate to the particular folder which contained the <b><i>docker-compose.yml</i></b> file and run the <b><i>docker-compose up </i></b> command. while you enter that command, you may get some console output mentioned below.\n<pre style={this.preCode}>{`\n  root@ubs:/home/dev/pynetwork/test# ls\n  docker-compose.yml\n  root@ubs:/home/dev/pynetwork/test# \n  root@ubs:/home/dev/pynetwork/test# docker-compose up\n  Creating network \"test_default\" with the default driver\n  Creating test_pynetwork_1 ... done\n  Creating test_pynetwork_ui_1 ... done\n  Attaching to test_pynetwork_1, test_pynetwork_ui_1\n\n`}</pre>\n        \n              Congratulations, you have successfully deployed the pynetwork on your local environment. Let's have fun with pynetwork!\n              <br/> <br/>\n              <b>Step: 3</b>\n              <br/>\n              Access the pynetwork on your web browser by using the IP address of the host machine with port 8080. In my example, it is <b><i>http://192.168.100.100:8080/ </i></b>\n              <br/>\n              <br/>\n              <img src={PynetworkURL} style={this.PynetworkURL} />\n              <br />\n              <br />\n              </Typography>\n          </Grid>\n          <Grid item xs={1} sm={2} md={3} lg={3}></Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default WebCli;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport AboutMe from \"./AboutMe\";\nimport AboutPynetwork from \"./AboutPynetwork\";\nimport Inventory from \"./Inventory\";\nimport WebCli from \"./WebCli\";\nimport ConfigManagement from \"./ConfigManagement\";\nimport Resume from \"./Resume\";\nimport Projects from \"./Projects\";\nimport AboutPynetworkProjects from \"./AboutPynetworkProjects\";\nimport HomeIcon from '@material-ui/icons//Home';\nimport QuickSetup from \"./QuickSetup\"\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  ButtonText: {\n    fontFamily: [\"Corbel\"].join(\",\"),\n    \"font-size\": \"1.2rem\",\n  },\n  toolbarButtons: {\n    marginLeft: \"auto\",\n    display: \"block\",\n  },\n  ButtonGroupStyle: {\n    marginRight: 10,\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n  const [displayPage, setDisplayPage] = React.useState(<AboutPynetwork />);\n\n  const selectedPage = (index) => {\n    console.log(index);\n    if (index === \"About Me\") {\n      setDisplayPage(<AboutMe />);\n    }\n    if (index === \"pynetwork Intro\") {\n      setDisplayPage(<AboutPynetwork />);\n    }\n    if (index === \"Inventory\") {\n      setDisplayPage(<Inventory />);\n    }\n    if (index === \"WEB CLI\") {\n      setDisplayPage(<WebCli />);\n    }\n    if (index === \"Config Management\") {\n      setDisplayPage(<ConfigManagement />);\n    }\n    if (index === \"Resume\") {\n      setDisplayPage(<Projects />);\n    }\n    if (index === \"Quick Setup\") {\n      setDisplayPage(<QuickSetup />);\n    }\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event, index) => {\n    // setOpen(!open)\n    setSelectedIndex(index);\n    selectedPage(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <ButtonGroup>\n              <Button\n                variant=\"contained\"\n                onClick={(event) => handleClick(event, \"About Me\")}\n                style={{ \"font-size\": \"0.8rem\" }}\n              >\n                Myself\n              </Button>\n              {/* <Button\n                variant=\"contained\"\n                onClick={(event) => handleClick(event, \"Resume\")}\n                style={{ \"font-size\": \"0.8rem\" }}\n              >\n                Resume\n              </Button> */}\n            </ButtonGroup>\n\n          <Typography variant=\"h6\" noWrap align=\"center\"></Typography>\n          <div className={classes.toolbarButtons}>\n          <IconButton\n            color=\"inherit\"\n            href={\"https://pynetwork.net/\"}\n            target=\"_blank\"\n          >\n            <HomeIcon />\n          </IconButton>        \n          <IconButton\n            color=\"inherit\"\n            href={\"https://github.com/hemaramanan/\"}\n            target=\"_blank\"\n          >\n            <GitHubIcon />\n          </IconButton>\n          \n          <IconButton\n            color=\"inherit\"\n            href={\"https://www.linkedin.com/in/hema/\"}\n            target=\"_blank\"\n          >\n            <LinkedInIcon />\n          </IconButton>  \n          {/* <IconButton\n            color=\"inherit\"\n            href={\n              \"https://www.youtube.com/channel/UCNUC58PnjCGUWnpXXl3o2MA/featured\"\n            }\n            target=\"_blank\"\n           \n          >\n            <YouTubeIcon/>\n          </IconButton> */}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\"PYnetwork Doc\"].map((text) => (\n            <ListItem multiline key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n          <List>\n            {[\n              \"pynetwork Intro\",\n              \"Quick Setup\",\n              \"Inventory\",\n              \"WEB CLI\",\n              \"Config Management\",\n            ].map((text, index) => (\n              <ListItem\n                button\n                key={text}\n                selected={selectedIndex === text}\n                onClick={(event) => handleClick(event, text)}\n              >\n                <ListItemText secondary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </List>\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Grid container>\n          <Grid item>{displayPage}</Grid>\n        </Grid>\n      </main>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard\";\n// require(\"dotenv\").config();\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}